version: '3.8'

services:
  webserver:
    image: denoland/deno:latest
    container_name: mutondeno
    volumes:
      - .:/app
    working_dir: /app
    command: sh -c "/app/webserver/start-webserver.sh"
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ./data/.env.postgres
      - ./simtellus/.env
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      PLANET_SIM_URL: http://planet_sim:4567
      API_KEY_AUTH_ENABLE: ${API_KEY_AUTH_ENABLE}
    ports:
      - "8888:8888"

  planet_sim:
    image: ruby:alpine
    volumes:
      - ./simtellus:/app
    command: sh /app/start-simtellus.sh
    ports:
      - "4567:4567"

  postgres:
    image: postgres:latest
    container_name: mutonpostgres
    env_file:
      - ./data/.env.postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 30s
      retries: 4

  nginx:
    image: nginx:latest
    container_name: mutonginx
    volumes:
      - ./server/nginx.conf:/etc/nginx/nginx.conf
      - ./server/certs:/etc/nginx/certs
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - webserver
    profiles:
      - production

  gameserver:
    image: elixir:latest
    container_name: mutonphoenix
    volumes:
      - ./gameserver:/app
    working_dir: /app
    command: sh -c "mix deps.get && mix phx.server" # Install deps and start Phoenix server
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      PLANET_SIM_URL: http://planet_sim:4567 
    ports:
      - "4000:4000" # Default Phoenix port

networks:
  default:
    name: mutonetwork
