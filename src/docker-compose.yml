version: '3.8'

services:
  deno:
    image: denoland/deno:latest
    container_name: mutonex_deno
    volumes:
      - .:/app
    working_dir: /app
    command: sh -c "./buildscript.sh"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      PLANET_SIM_URL: http://planet_sim:4567
    ports:
      - "8888:8888"

  planet_sim:
    image: ruby:alpine
    volumes:
      - ./simtellus:/app
    command: sh /app/start-simtellus.sh
    ports:
      - "4567:4567"

  postgres:
    image: postgres:latest
    container_name: mutonpostgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./data/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 30s
      retries: 3

  nginx:
    image: nginx:latest
    container_name: mutonginx
    volumes:
      - ./server/nginx.conf:/etc/nginx/nginx.conf
      - ./server/certs:/etc/nginx/certs
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - deno
    profiles:
      - production

networks:
  default:
    name: mutonetwork
